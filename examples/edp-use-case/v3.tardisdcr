// ============================================================================
// (included in the context of the TaRDIS EDP Use Case)
// 
// The choreography illustrates a simplified energy-request workflow, where 
//  each individual Prosumer may issue energy requests to every other Prosumer.
// 
// In this scenario, participants are specified generically and evaluated at 
//  runtime; consequently, some events are also dynamically instantiated
//  spawned (-->>), depending on the receivers encountered at runtime.
//  
// (IFC-wise: every event has Public visibility)
// ============================================================================

P(id:String)
Public
;

Public flows P
;

//                     from each P -> to every other P
(csm:consume) (Public) [?] [P(#id) -> P(id=*)]
;
csm -->> {
  (reply: reply) (Public) [?] [@Receiver(csm) -> @Initiator(csm)]
  ;
  reply -->> {
    !(accept: accept) (Public) [?] [@Initiator(csm) -> @Receiver(csm)]
    !(reject: reject) (Public) [?] [@Initiator(csm) -> @Receiver(csm)]
    ;
    accept, reject -->% accept, reject
  }
}